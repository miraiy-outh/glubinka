generator client {
    provider = "prisma-client-js"
}

datasource db {
    provider = "sqlite"
    url      = env("DATABASE_URL")
}

model Product {
    id          String                  @id @default(uuid())
    name        String
    price       Int
    description String
    images      Image[]
    details     Detail[]
    sizes       SizesOfProducts[]
    colors      ColorsOfProducts[]
    types       TypesOfProducts[]
    collections ProductsInCollections[]
}

model Size {
    id       String            @id @default(uuid())
    size     String
    products SizesOfProducts[]
}

model Color {
    id       String             @id @default(uuid())
    title    String
    hex      String
    products ColorsOfProducts[]
}

model Type {
    id       String            @id @default(uuid())
    title    String
    products TypesOfProducts[]
}

model Collection {
    id       String                  @id @default(uuid())
    title    String
    products ProductsInCollections[]
}

model Detail {
    id        String   @id @default(uuid())
    title     String
    value     String
    product   Product? @relation(fields: [productId], references: [id])
    productId String?
}

model Image {
    id        String   @id @default(uuid())
    url       String
    product   Product? @relation(fields: [productId], references: [id])
    productId String?
}

model SizesOfProducts {
    product   Product @relation(fields: [productId], references: [id])
    productId String
    size      Size    @relation(fields: [sizeId], references: [id])
    sizeId    String
    isExist   Boolean

    @@id([productId, sizeId])
}

model ColorsOfProducts {
    product   Product @relation(fields: [productId], references: [id])
    productId String
    color     Color   @relation(fields: [colorId], references: [id])
    colorId   String
    isExist   Boolean

    @@id([productId, colorId])
}

model TypesOfProducts {
    product   Product @relation(fields: [productId], references: [id])
    productId String
    type      Type    @relation(fields: [typeId], references: [id])
    typeId    String

    @@id([productId, typeId])
}

model ProductsInCollections {
    product      Product    @relation(fields: [productId], references: [id])
    productId    String
    collection   Collection @relation(fields: [collectionId], references: [id])
    collectionId String

    @@id([productId, collectionId])
}
